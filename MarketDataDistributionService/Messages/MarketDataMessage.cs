// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MarketDataMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MarketDataService.Messages {

  /// <summary>Holder for reflection information generated from MarketDataMessage.proto</summary>
  public static partial class MarketDataMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for MarketDataMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketDataMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdNYXJrZXREYXRhTWVzc2FnZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90byLFAQoRTWFya2V0RGF0YU1lc3NhZ2USEQoJdW5kZXJs",
            "aWVyGAEgASgJEg4KBmJpZF9weBgCIAEoARIOCgZhc2tfcHgYAyABKAESFgoO",
            "dm9sYXRpbGl0eV9wY3QYBCABKAESGgoScmlza19mcmVlX3JhdGVfcGN0GAUg",
            "ASgBEhoKEmRpdmlkZW5kX3lpZWxkX3BjdBgGIAEoARItCglwcmljZVRpbWUY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQh2qAhpNYXJrZXRE",
            "YXRhU2VydmljZS5NZXNzYWdlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MarketDataService.Messages.MarketDataMessage), global::MarketDataService.Messages.MarketDataMessage.Parser, new[]{ "Underlier", "BidPx", "AskPx", "VolatilityPct", "RiskFreeRatePct", "DividendYieldPct", "PriceTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MarketDataMessage : pb::IMessage<MarketDataMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketDataMessage> _parser = new pb::MessageParser<MarketDataMessage>(() => new MarketDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MarketDataService.Messages.MarketDataMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataMessage(MarketDataMessage other) : this() {
      underlier_ = other.underlier_;
      bidPx_ = other.bidPx_;
      askPx_ = other.askPx_;
      volatilityPct_ = other.volatilityPct_;
      riskFreeRatePct_ = other.riskFreeRatePct_;
      dividendYieldPct_ = other.dividendYieldPct_;
      priceTime_ = other.priceTime_ != null ? other.priceTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataMessage Clone() {
      return new MarketDataMessage(this);
    }

    /// <summary>Field number for the "underlier" field.</summary>
    public const int UnderlierFieldNumber = 1;
    private string underlier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Underlier {
      get { return underlier_; }
      set {
        underlier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bid_px" field.</summary>
    public const int BidPxFieldNumber = 2;
    private double bidPx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BidPx {
      get { return bidPx_; }
      set {
        bidPx_ = value;
      }
    }

    /// <summary>Field number for the "ask_px" field.</summary>
    public const int AskPxFieldNumber = 3;
    private double askPx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AskPx {
      get { return askPx_; }
      set {
        askPx_ = value;
      }
    }

    /// <summary>Field number for the "volatility_pct" field.</summary>
    public const int VolatilityPctFieldNumber = 4;
    private double volatilityPct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double VolatilityPct {
      get { return volatilityPct_; }
      set {
        volatilityPct_ = value;
      }
    }

    /// <summary>Field number for the "risk_free_rate_pct" field.</summary>
    public const int RiskFreeRatePctFieldNumber = 5;
    private double riskFreeRatePct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RiskFreeRatePct {
      get { return riskFreeRatePct_; }
      set {
        riskFreeRatePct_ = value;
      }
    }

    /// <summary>Field number for the "dividend_yield_pct" field.</summary>
    public const int DividendYieldPctFieldNumber = 6;
    private double dividendYieldPct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DividendYieldPct {
      get { return dividendYieldPct_; }
      set {
        dividendYieldPct_ = value;
      }
    }

    /// <summary>Field number for the "priceTime" field.</summary>
    public const int PriceTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp priceTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PriceTime {
      get { return priceTime_; }
      set {
        priceTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Underlier != other.Underlier) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BidPx, other.BidPx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AskPx, other.AskPx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VolatilityPct, other.VolatilityPct)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RiskFreeRatePct, other.RiskFreeRatePct)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DividendYieldPct, other.DividendYieldPct)) return false;
      if (!object.Equals(PriceTime, other.PriceTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Underlier.Length != 0) hash ^= Underlier.GetHashCode();
      if (BidPx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BidPx);
      if (AskPx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AskPx);
      if (VolatilityPct != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VolatilityPct);
      if (RiskFreeRatePct != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RiskFreeRatePct);
      if (DividendYieldPct != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DividendYieldPct);
      if (priceTime_ != null) hash ^= PriceTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Underlier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlier);
      }
      if (BidPx != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(BidPx);
      }
      if (AskPx != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AskPx);
      }
      if (VolatilityPct != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VolatilityPct);
      }
      if (RiskFreeRatePct != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RiskFreeRatePct);
      }
      if (DividendYieldPct != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DividendYieldPct);
      }
      if (priceTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PriceTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Underlier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Underlier);
      }
      if (BidPx != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(BidPx);
      }
      if (AskPx != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AskPx);
      }
      if (VolatilityPct != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VolatilityPct);
      }
      if (RiskFreeRatePct != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RiskFreeRatePct);
      }
      if (DividendYieldPct != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DividendYieldPct);
      }
      if (priceTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PriceTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Underlier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlier);
      }
      if (BidPx != 0D) {
        size += 1 + 8;
      }
      if (AskPx != 0D) {
        size += 1 + 8;
      }
      if (VolatilityPct != 0D) {
        size += 1 + 8;
      }
      if (RiskFreeRatePct != 0D) {
        size += 1 + 8;
      }
      if (DividendYieldPct != 0D) {
        size += 1 + 8;
      }
      if (priceTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketDataMessage other) {
      if (other == null) {
        return;
      }
      if (other.Underlier.Length != 0) {
        Underlier = other.Underlier;
      }
      if (other.BidPx != 0D) {
        BidPx = other.BidPx;
      }
      if (other.AskPx != 0D) {
        AskPx = other.AskPx;
      }
      if (other.VolatilityPct != 0D) {
        VolatilityPct = other.VolatilityPct;
      }
      if (other.RiskFreeRatePct != 0D) {
        RiskFreeRatePct = other.RiskFreeRatePct;
      }
      if (other.DividendYieldPct != 0D) {
        DividendYieldPct = other.DividendYieldPct;
      }
      if (other.priceTime_ != null) {
        if (priceTime_ == null) {
          PriceTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PriceTime.MergeFrom(other.PriceTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Underlier = input.ReadString();
            break;
          }
          case 17: {
            BidPx = input.ReadDouble();
            break;
          }
          case 25: {
            AskPx = input.ReadDouble();
            break;
          }
          case 33: {
            VolatilityPct = input.ReadDouble();
            break;
          }
          case 41: {
            RiskFreeRatePct = input.ReadDouble();
            break;
          }
          case 49: {
            DividendYieldPct = input.ReadDouble();
            break;
          }
          case 58: {
            if (priceTime_ == null) {
              PriceTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PriceTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Underlier = input.ReadString();
            break;
          }
          case 17: {
            BidPx = input.ReadDouble();
            break;
          }
          case 25: {
            AskPx = input.ReadDouble();
            break;
          }
          case 33: {
            VolatilityPct = input.ReadDouble();
            break;
          }
          case 41: {
            RiskFreeRatePct = input.ReadDouble();
            break;
          }
          case 49: {
            DividendYieldPct = input.ReadDouble();
            break;
          }
          case 58: {
            if (priceTime_ == null) {
              PriceTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PriceTime);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
